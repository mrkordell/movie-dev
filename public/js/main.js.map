{"version":3,"names":[],"mappings":"","sources":["main.js"],"sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nVue.filter('inChunksOf', function (array) {\n  var number = arguments.length <= 1 || arguments[1] === undefined ? 2 : arguments[1];\n\n  return _.chunk(array, number);\n});\n\nVue.filter('date', function (value) {\n  var date = new Date(value);\n  return date.getMonth() + 1 + '-' + date.getDate() + '-' + date.getFullYear();\n});\n\nVue.filter('limit', function (data) {\n  var number = arguments.length <= 1 || arguments[1] === undefined ? 9999 : arguments[1];\n\n  console.log(data);\n  return data.slice(0, number);\n});\nvar vm = new Vue({\n  el: '#app',\n  data: {\n    movies: [],\n    upcoming: [],\n    results: [],\n    search: '',\n    img_base: 'http://image.tmdb.org/t/p/w92',\n    base: 'http://image.tmdb.org/t/p/w154',\n    remove: {},\n    limit: 12\n  },\n  methods: {\n    searchMovies: function searchMovies() {\n      var that = this;\n      $.post('/api/movies', { query: this.search }, function (data) {\n        that.results = data.results;\n      }, 'JSON');\n    },\n    addMovie: function addMovie(id, event) {\n      var that = this;\n      $.post('user/movie', { id: id, \"_token\": \"{{csrf_token()}}\" }, function (data) {\n        console.log(event.target);\n        event.target.className = \"btn btn-success\";\n        event.target.innerHTML = 'Added!';\n        that.movies = data;\n      });\n    },\n    removeMovie: function removeMovie(id) {\n      $.post('user/remove', { id: id, \"_token\": \"{{csrf_token()}}\" }, function (data) {});\n      this.movies = _.filter(this.movies, function (movie) {\n        if (movie.id != id) {\n          return movie;\n        }\n      });\n    },\n    hasMovie: function hasMovie(id) {\n      return _.find(this.movies, function (m) {\n        return m.tmdb_id == id;\n      });\n    }\n  }\n\n});\n\n},{}]},{},[1]);\n"],"file":"main.js","sourceRoot":"/source/"}